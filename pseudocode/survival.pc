################################################################################
# Contributors: ericscollins
################################################################################
# FILE: SR.SU
#
# Pseudocode for function SURVL. For common variable descriptions, see
# CommonVariables.pc .
# From the Fortran:
#      Takes the number of juveniles in the current generation and returns the
#      number of adults in the current generation "RSLTS(1-3,IGEN)"
#      SYNOPSIS:
#		1) This subroutine uses the rates of emigration ("outflow") to
#		   determine the number of juveniles of each genotype emigrating
#		   (NOOUT) and removes them from the juvenile population.
#
#		2) It then determines the number of juveniles dying from the
#		   rates of survival (SURVR8) and removes them from the
#		   population to determine the number surviving to adulthood
#		   (ADLT array).
#
#		3) The number of immigrants (INFLO) of each genotype is added
#		   to ADLT.
#
#		4) If the number of adults exceeds the carrying capacity
#		   (MXPOP1), the total is reduced to the post-crash size
#		   (MXPOP2).
################################################################################


void SRVIVL() 
    ### Local declarations ###
    float adlt[3],                          # number of adults of each genotype
          atot,                             # total number of adults after calcs
          crsh                              # percentage of population to kill
	                                    ## off if crash occurs. kills this
					    ## percent of each genotype


    ### initialize ###
    for i in 0..3
        adlt[i] = 0
    atot = 0

    ### emigration of juveniles ###
    # check if any emigration has occured
    if (OUTFLO[0] != 0 or OUTFLO[1] != 0 or OUTFLO[2] != 0)
        # for each genotype...
        for i in 0..3
	    # if no members of this genotype emigrated...
            if (OUTFLO[i] <= 0 or JUV[i] <= 0)
	        # ...then set the total emigration of that genotype to 0
	        NOOUT[i] = 0
		
            else
		# ...otherwise set the total emigration of that genotype to:
		# (No. of juveniles of that genotype) x (No. of that genotype emigrating) / 100 + 0.5
                NOOUT[i] = JUV[i] * OUTFLO[i] / 100 + 0.5
		
		# correct the number of juveniles to account for those that left
	        JUV[i] = JUV[i] - NOOUT[i]


    ### calculate total number of adults ###
    for i in 0..3
    	# (adult pop of genotype) = (survival rate of genotype) * (No. of juveniles of genotype) + 0.5 + (immigrants of genotype) 
        adlt[i] = SURVR8[i] / 100 * JUV[i] + 0.5 + INFLO[i]
        atot = atot + adlt[i]


    ### test for adults > carrying capacity, crash if necessary ###
    if (atot >= MAXPOP1)
        # get ratio of crash population to total population
        crsh = float(MXPOP2) / float(atot)
        for i in 0..3
	    # decrease population by that ratio on a per genotype basis
            adlt[i] = adlt[i] * crsh + 0.5


    ### put adults into results array ###
    for i in 0..3
        RSLT[i][IGEN] = adlt[i]